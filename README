So, let's try to get some neural network predict the euro tournament.

1. To train the network, we need historic data
----------------------------------------------

https://www.oddsportal.com/soccer/europe/euro-2004/results/
https://www.oddsportal.com/soccer/europe/euro-2008/results/
https://www.oddsportal.com/soccer/europe/euro-2012/results/
https://www.oddsportal.com/soccer/europe/euro-2016/results/

Let's put that in a csv (4 csv ?) and see where we come.

So the content comes from a json call.
Let's save the payload in the docs dir.
And remove the extra stuff.
Leave only the html string.

Iterate over the lines and extract the data.
Hours, Day, Participants, Score are easy to extract.

The odd seems to be encoded in an own cipher.
The decoding must happen in js in browser.
Either it's a lookup table, or there is some trick.
At least they stay constant upon refresh of the page.

So there is always an 'f' in the middle, and often a 'z' on both side.
The z could stand for '.', and maybe only the part after the 'f' is relevant.
Okay, we have two values there: the max amoung the brokers (first part) and the mean (the second part).
It's some simple substitution code.

Refactor the code to process all the data, and generate csv.

2. Once we have the data, we need to define the environment for our ML agent.
-----------------------------------------------------------------------------

We settle on gym.
So we need an observation space and an action space.

The action space is easy:
  its the predicted score

The observation space will simply take all the rows from our data.
 - date ? nope
 - score ? you kidding ? nope
 - only three odds instead of the six
So:
 - 2 x team, 3 x odds

Theoretically, every team in the world could play.

Okay, it's more difficult than I thought to add countries to the observation space ...
Let's remove it for now.
